package com.yjkj.ks_user.entity;

import java.util.ArrayList;
import java.util.List;

public class FixRewardExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public FixRewardExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOneMerIsNull() {
            addCriterion("one_Mer is null");
            return (Criteria) this;
        }

        public Criteria andOneMerIsNotNull() {
            addCriterion("one_Mer is not null");
            return (Criteria) this;
        }

        public Criteria andOneMerEqualTo(Long value) {
            addCriterion("one_Mer =", value, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerNotEqualTo(Long value) {
            addCriterion("one_Mer <>", value, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerGreaterThan(Long value) {
            addCriterion("one_Mer >", value, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerGreaterThanOrEqualTo(Long value) {
            addCriterion("one_Mer >=", value, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerLessThan(Long value) {
            addCriterion("one_Mer <", value, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerLessThanOrEqualTo(Long value) {
            addCriterion("one_Mer <=", value, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerIn(List<Long> values) {
            addCriterion("one_Mer in", values, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerNotIn(List<Long> values) {
            addCriterion("one_Mer not in", values, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerBetween(Long value1, Long value2) {
            addCriterion("one_Mer between", value1, value2, "oneMer");
            return (Criteria) this;
        }

        public Criteria andOneMerNotBetween(Long value1, Long value2) {
            addCriterion("one_Mer not between", value1, value2, "oneMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerIsNull() {
            addCriterion("two_Mer is null");
            return (Criteria) this;
        }

        public Criteria andTwoMerIsNotNull() {
            addCriterion("two_Mer is not null");
            return (Criteria) this;
        }

        public Criteria andTwoMerEqualTo(Long value) {
            addCriterion("two_Mer =", value, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerNotEqualTo(Long value) {
            addCriterion("two_Mer <>", value, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerGreaterThan(Long value) {
            addCriterion("two_Mer >", value, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerGreaterThanOrEqualTo(Long value) {
            addCriterion("two_Mer >=", value, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerLessThan(Long value) {
            addCriterion("two_Mer <", value, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerLessThanOrEqualTo(Long value) {
            addCriterion("two_Mer <=", value, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerIn(List<Long> values) {
            addCriterion("two_Mer in", values, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerNotIn(List<Long> values) {
            addCriterion("two_Mer not in", values, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerBetween(Long value1, Long value2) {
            addCriterion("two_Mer between", value1, value2, "twoMer");
            return (Criteria) this;
        }

        public Criteria andTwoMerNotBetween(Long value1, Long value2) {
            addCriterion("two_Mer not between", value1, value2, "twoMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerIsNull() {
            addCriterion("three_Mer is null");
            return (Criteria) this;
        }

        public Criteria andThreeMerIsNotNull() {
            addCriterion("three_Mer is not null");
            return (Criteria) this;
        }

        public Criteria andThreeMerEqualTo(Long value) {
            addCriterion("three_Mer =", value, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerNotEqualTo(Long value) {
            addCriterion("three_Mer <>", value, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerGreaterThan(Long value) {
            addCriterion("three_Mer >", value, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerGreaterThanOrEqualTo(Long value) {
            addCriterion("three_Mer >=", value, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerLessThan(Long value) {
            addCriterion("three_Mer <", value, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerLessThanOrEqualTo(Long value) {
            addCriterion("three_Mer <=", value, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerIn(List<Long> values) {
            addCriterion("three_Mer in", values, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerNotIn(List<Long> values) {
            addCriterion("three_Mer not in", values, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerBetween(Long value1, Long value2) {
            addCriterion("three_Mer between", value1, value2, "threeMer");
            return (Criteria) this;
        }

        public Criteria andThreeMerNotBetween(Long value1, Long value2) {
            addCriterion("three_Mer not between", value1, value2, "threeMer");
            return (Criteria) this;
        }

        public Criteria andRemarksOneIsNull() {
            addCriterion("remarks_One is null");
            return (Criteria) this;
        }

        public Criteria andRemarksOneIsNotNull() {
            addCriterion("remarks_One is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksOneEqualTo(Long value) {
            addCriterion("remarks_One =", value, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneNotEqualTo(Long value) {
            addCriterion("remarks_One <>", value, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneGreaterThan(Long value) {
            addCriterion("remarks_One >", value, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneGreaterThanOrEqualTo(Long value) {
            addCriterion("remarks_One >=", value, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneLessThan(Long value) {
            addCriterion("remarks_One <", value, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneLessThanOrEqualTo(Long value) {
            addCriterion("remarks_One <=", value, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneIn(List<Long> values) {
            addCriterion("remarks_One in", values, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneNotIn(List<Long> values) {
            addCriterion("remarks_One not in", values, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneBetween(Long value1, Long value2) {
            addCriterion("remarks_One between", value1, value2, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksOneNotBetween(Long value1, Long value2) {
            addCriterion("remarks_One not between", value1, value2, "remarksOne");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoIsNull() {
            addCriterion("remarks_Two is null");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoIsNotNull() {
            addCriterion("remarks_Two is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoEqualTo(Long value) {
            addCriterion("remarks_Two =", value, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoNotEqualTo(Long value) {
            addCriterion("remarks_Two <>", value, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoGreaterThan(Long value) {
            addCriterion("remarks_Two >", value, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoGreaterThanOrEqualTo(Long value) {
            addCriterion("remarks_Two >=", value, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoLessThan(Long value) {
            addCriterion("remarks_Two <", value, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoLessThanOrEqualTo(Long value) {
            addCriterion("remarks_Two <=", value, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoIn(List<Long> values) {
            addCriterion("remarks_Two in", values, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoNotIn(List<Long> values) {
            addCriterion("remarks_Two not in", values, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoBetween(Long value1, Long value2) {
            addCriterion("remarks_Two between", value1, value2, "remarksTwo");
            return (Criteria) this;
        }

        public Criteria andRemarksTwoNotBetween(Long value1, Long value2) {
            addCriterion("remarks_Two not between", value1, value2, "remarksTwo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ks_fixed_reward
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}